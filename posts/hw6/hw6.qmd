---
title: "LS Bigdata School Homework 6"
author: iljoon
date: "2024-07-30"
categories: [homework]
jupyter: python3
---

챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기

norm.ppf() 사용해서 그릴 것. 모분산은 표본 분산을 사용해서 추정

위 아래 수직 막대기로 표시 (아래 그림 참조)

![숙제 그림](../../img/숙제6.png)

# 패키지 불러오기

```{python}
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import norm
```

# 데이터 불러오기

```{python}
# 처음 데이터는 용량이 커서 어느정도 전처리 된 데이터를 불러왔다.
welfare = pd.read_csv("../../data/hw6_welfare.csv")
```

# 수업 시간 때 그렸던 그래프

```{python}
sex_income = welfare.dropna(subset = "income") \
       .groupby("sex", as_index=False) \
       .agg(mean_income = ("income", "mean"))
sex_income

sns.barplot(data = sex_income, x = "sex", y = "mean_income", hue = "sex")
plt.show()
plt.clf()
```

### 각 성별 95% 신뢰구간 계산

# 여성-월급 테이블 / 남성-월급 테이블 뽑기

```{python}
female_income = welfare \
    .dropna(subset = "income") \
    .query('sex == "female"')[["sex", "income"]]

male_income = welfare \
    .dropna(subset = "income") \
    .query('sex == "male"')[["sex", "income"]]
```

# 평균 구하기

```{python}
female_x_var = female_income["income"].mean() # 186.29309576837417
male_x_var = male_income["income"].mean() # 349.03757099169945
```

# 표본분산 구하기

```{python}
# sum((female_income["income"] - female_income_mean)**2) / (len(female_income)-1)
female_s_2 = female_income["income"].var() # 17439.157372096437
male_s_2 = male_income["income"].var() # 47463.96187451692
```

# 표준편차 구하기

```{python}
female_sigma = np.sqrt(female_s_2) # 132.05740180730666
male_sigma = np.sqrt(male_s_2) # 217.86225435930135
```

# 신뢰구간 95% 구하기

```{python}
female_025 = norm.ppf(0.025, loc = female_x_var, scale = female_sigma)
# -72.53465566588156
female_975 = norm.ppf(0.975, loc = female_x_var, scale = female_sigma)
# 445.1208472026299

male_025 = norm.ppf(0.025, loc = male_x_var, scale = male_sigma)
# -77.96460114323565
male_975 = norm.ppf(0.975, loc = male_x_var, scale = male_sigma)
# 776.0397431266344
```

# 시각화 하기.

```{python}
sex_income = welfare.dropna(subset = "income") \
       .groupby("sex", as_index=False) \
       .agg(mean_income = ("income", "mean"))
sex_income
sns.barplot(data = sex_income, x = "sex", y = "mean_income", hue = "sex")

plt.vlines(x = 0, ymin = female_025, ymax = female_975, colors = "green")
plt.vlines(x = 1, ymin = male_025, ymax = male_975, colors = "green")
plt.show()
plt.clf()
```
