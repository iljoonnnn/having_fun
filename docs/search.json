[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "거래 시뮬레이션",
    "section": "",
    "text": "당신은 모험을 마치고 허름한 상점에 도착했다.\n\n\n현재 당신의 주머니에 있는 금화는 몇개입니까?\n현재 당신의 주머니에 있는 금화는0개이군요"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "hw1",
    "section": "",
    "text": "84p\n\nimport pandas as pd\nmydata = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n          '가격' : [1800, 1500, 3000],\n          '판매량' : [24, 38, 13]})\nmydata\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nprice_mean = sum(mydata['가격'])/len(mydata)\nprint('가격 평균=', price_mean)\nsales_mean = sum(mydata['판매량'])/len(mydata)\nprint('판매량 평균=', sales_mean)\n\n가격 평균= 2100.0\n판매량 평균= 25.0\n\n\n\n\n115p\n\nraw_data = pd.read_csv('data/mpg.csv')\nraw_data.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nnew_data = raw_data.copy()\nnew_data = new_data.rename(columns = {'cty': 'city'})\nnew_data = new_data.rename(columns = {'hwy': 'hightway'})\nnew_data.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhightway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n130p\n\nraw_midwest = pd.read_csv('data/midwest.csv')\nraw_midwest.head()\nraw_midwest.tail()\nraw_midwest.shape\nraw_midwest.info()\nraw_midwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\n\nnew_midwest = raw_midwest.copy()\nnew_midwest = new_midwest.rename(columns = {'poptotal' : 'total'})\nnew_midwest = new_midwest.rename(columns = {'popasian' : 'asian'})\nnew_midwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nimport matplotlib.pyplot as plt\nplt.clf()\nnew_midwest['asian_total'] = new_midwest['asian'] / new_midwest['total'] * 100\nnew_midwest['asian_total'].plot.hist(rot=0)\nplt.show()\n\n\n\n\n\n\n\n\n\nimport numpy as np\nasian_total_mean = sum(new_midwest['asian_total']) / len(new_midwest)\nnew_midwest['grade'] = np.where(new_midwest['asian_total']&gt;asian_total_mean, 'large', 'small')\n\n\nmy_series = new_midwest['grade'].value_counts()\nplt.clf()\nmy_series.plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "hw2_240716.html",
    "href": "hw2_240716.html",
    "title": "hw2",
    "section": "",
    "text": "#라이브러리, 데이터 불러오기\nimport pandas as pd\nimport numpy as np\nmpg = pd.read_csv('data/mpg.csv')\n\n\n\n\n#배기량이 4이하인 자동차의 고속도로 연비 평균\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n#배기량이 5이상상인 자동차의 고속도로 연비 평균\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다.\n\n\n\n\n#아우디 자동차의 도시연비 평균\nmpg.query('manufacturer == \"audi\"')[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n#도요타 자동차의 도시연비 평균\nmpg.query('manufacturer == \"toyota\"')[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n도요타 자동차 연비 평균이 더 높다.\n\n\n\n\n#쉐보레, 포드, 혼다 자동차들의 고속도로 연비 평균\nmpg.query('manufacturer in [\"chevrolet\",\"fold\",\"honda\"]')[\"hwy\"].mean()\n\nnp.float64(25.321428571428573)"
  },
  {
    "objectID": "hw2_240716.html#q1",
    "href": "hw2_240716.html#q1",
    "title": "hw2",
    "section": "",
    "text": "#배기량이 4이하인 자동차의 고속도로 연비 평균\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n#배기량이 5이상상인 자동차의 고속도로 연비 평균\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "hw2_240716.html#q2",
    "href": "hw2_240716.html#q2",
    "title": "hw2",
    "section": "",
    "text": "#아우디 자동차의 도시연비 평균\nmpg.query('manufacturer == \"audi\"')[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n#도요타 자동차의 도시연비 평균\nmpg.query('manufacturer == \"toyota\"')[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n도요타 자동차 연비 평균이 더 높다."
  },
  {
    "objectID": "hw2_240716.html#q3",
    "href": "hw2_240716.html#q3",
    "title": "hw2",
    "section": "",
    "text": "#쉐보레, 포드, 혼다 자동차들의 고속도로 연비 평균\nmpg.query('manufacturer in [\"chevrolet\",\"fold\",\"honda\"]')[\"hwy\"].mean()\n\nnp.float64(25.321428571428573)"
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "hw1",
    "section": "",
    "text": "84p\n\nimport pandas as pd\nmydata = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n          '가격' : [1800, 1500, 3000],\n          '판매량' : [24, 38, 13]})\nmydata\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nprice_mean = sum(mydata['가격'])/len(mydata)\nprint('가격 평균=', price_mean)\nsales_mean = sum(mydata['판매량'])/len(mydata)\nprint('판매량 평균=', sales_mean)\n\n가격 평균= 2100.0\n판매량 평균= 25.0\n\n\n\n\n115p\n\nraw_data = pd.read_csv('../../data/mpg.csv')\nraw_data.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nnew_data = raw_data.copy()\nnew_data = new_data.rename(columns = {'cty': 'city'})\nnew_data = new_data.rename(columns = {'hwy': 'hightway'})\nnew_data.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhightway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n130p\n\nraw_midwest = pd.read_csv('../../data/midwest.csv')\nraw_midwest.head()\nraw_midwest.tail()\nraw_midwest.shape\nraw_midwest.info()\nraw_midwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\n\nnew_midwest = raw_midwest.copy()\nnew_midwest = new_midwest.rename(columns = {'poptotal' : 'total'})\nnew_midwest = new_midwest.rename(columns = {'popasian' : 'asian'})\nnew_midwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nimport matplotlib.pyplot as plt\nplt.clf()\nnew_midwest['asian_total'] = new_midwest['asian'] / new_midwest['total'] * 100\nnew_midwest['asian_total'].plot.hist(rot=0)\nplt.show()\n\n\n\n\n\n\n\n\n\nimport numpy as np\nasian_total_mean = sum(new_midwest['asian_total']) / len(new_midwest)\nnew_midwest['grade'] = np.where(new_midwest['asian_total']&gt;asian_total_mean, 'large', 'small')\n\n\nmy_series = new_midwest['grade'].value_counts()\nplt.clf()\nmy_series.plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "myblog",
    "section": "",
    "text": "LS Bigdata School Homework 2\n\n\n\n\n\n\nhomework\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\niljoon\n\n\n\n\n\n\n\n\n\n\n\n\nLS Bigdata School Homework 1\n\n\n\n\n\n\nhomework\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\niljoon\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw2/index.html",
    "href": "posts/hw2/index.html",
    "title": "hw2",
    "section": "",
    "text": "#라이브러리, 데이터 불러오기\nimport pandas as pd\nimport numpy as np\nmpg = pd.read_csv('../../data/mpg.csv')\n\n\n\n\n#배기량이 4이하인 자동차의 고속도로 연비 평균\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n#배기량이 5이상상인 자동차의 고속도로 연비 평균\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다.\n\n\n\n\n#아우디 자동차의 도시연비 평균\nmpg.query('manufacturer == \"audi\"')[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n#도요타 자동차의 도시연비 평균\nmpg.query('manufacturer == \"toyota\"')[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n도요타 자동차 연비 평균이 더 높다.\n\n\n\n\n#쉐보레, 포드, 혼다 자동차들의 고속도로 연비 평균\nmpg.query('manufacturer in [\"chevrolet\",\"fold\",\"honda\"]')[\"hwy\"].mean()\n\nnp.float64(25.321428571428573)"
  },
  {
    "objectID": "posts/hw2/index.html#q1",
    "href": "posts/hw2/index.html#q1",
    "title": "hw2",
    "section": "",
    "text": "#배기량이 4이하인 자동차의 고속도로 연비 평균\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n#배기량이 5이상상인 자동차의 고속도로 연비 평균\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/index.html#q2",
    "href": "posts/hw2/index.html#q2",
    "title": "hw2",
    "section": "",
    "text": "#아우디 자동차의 도시연비 평균\nmpg.query('manufacturer == \"audi\"')[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n#도요타 자동차의 도시연비 평균\nmpg.query('manufacturer == \"toyota\"')[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n도요타 자동차 연비 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/index.html#q3",
    "href": "posts/hw2/index.html#q3",
    "title": "hw2",
    "section": "",
    "text": "#쉐보레, 포드, 혼다 자동차들의 고속도로 연비 평균\nmpg.query('manufacturer in [\"chevrolet\",\"fold\",\"honda\"]')[\"hwy\"].mean()\n\nnp.float64(25.321428571428573)"
  },
  {
    "objectID": "posts/hw1/hw1.html",
    "href": "posts/hw1/hw1.html",
    "title": "LS Bigdata School Homework 1",
    "section": "",
    "text": "84p\n\nimport pandas as pd\nmydata = pd.DataFrame({'제품' : ['사과', '딸기', '수박'],\n          '가격' : [1800, 1500, 3000],\n          '판매량' : [24, 38, 13]})\nmydata\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nprice_mean = sum(mydata['가격'])/len(mydata)\nprint('가격 평균=', price_mean)\nsales_mean = sum(mydata['판매량'])/len(mydata)\nprint('판매량 평균=', sales_mean)\n\n가격 평균= 2100.0\n판매량 평균= 25.0\n\n\n\n\n115p\n\nraw_data = pd.read_csv('../../data/mpg.csv')\nraw_data.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nnew_data = raw_data.copy()\nnew_data = new_data.rename(columns = {'cty': 'city'})\nnew_data = new_data.rename(columns = {'hwy': 'hightway'})\nnew_data.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhightway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n130p\n\nraw_midwest = pd.read_csv('../../data/midwest.csv')\nraw_midwest.head()\nraw_midwest.tail()\nraw_midwest.shape\nraw_midwest.info()\nraw_midwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\n\nnew_midwest = raw_midwest.copy()\nnew_midwest = new_midwest.rename(columns = {'poptotal' : 'total'})\nnew_midwest = new_midwest.rename(columns = {'popasian' : 'asian'})\nnew_midwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nimport matplotlib.pyplot as plt\nplt.clf()\nnew_midwest['asian_total'] = new_midwest['asian'] / new_midwest['total'] * 100\nnew_midwest['asian_total'].plot.hist(rot=0)\nplt.show()\n\n\n\n\n\n\n\n\n\nimport numpy as np\nasian_total_mean = sum(new_midwest['asian_total']) / len(new_midwest)\nnew_midwest['grade'] = np.where(new_midwest['asian_total']&gt;asian_total_mean, 'large', 'small')\n\n\nmy_series = new_midwest['grade'].value_counts()\nplt.clf()\nmy_series.plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "posts/hw2/h2.html",
    "href": "posts/hw2/h2.html",
    "title": "LS Bigdata School Homework 2",
    "section": "",
    "text": "#라이브러리, 데이터 불러오기\nimport pandas as pd\nimport numpy as np\nmpg = pd.read_csv('../../data/mpg.csv')\n\n\n\n\n#배기량이 4이하인 자동차의 고속도로 연비 평균\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n#배기량이 5이상상인 자동차의 고속도로 연비 평균\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다.\n\n\n\n\n#아우디 자동차의 도시연비 평균\nmpg.query('manufacturer == \"audi\"')[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n#도요타 자동차의 도시연비 평균\nmpg.query('manufacturer == \"toyota\"')[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n도요타 자동차 연비 평균이 더 높다.\n\n\n\n\n#쉐보레, 포드, 혼다 자동차들의 고속도로 연비 평균\nmpg.query('manufacturer in [\"chevrolet\",\"fold\",\"honda\"]')[\"hwy\"].mean()\n\nnp.float64(25.321428571428573)"
  },
  {
    "objectID": "posts/hw2/h2.html#q1",
    "href": "posts/hw2/h2.html#q1",
    "title": "LS Bigdata School Homework 2",
    "section": "",
    "text": "#배기량이 4이하인 자동차의 고속도로 연비 평균\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n#배기량이 5이상상인 자동차의 고속도로 연비 평균\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/h2.html#q2",
    "href": "posts/hw2/h2.html#q2",
    "title": "LS Bigdata School Homework 2",
    "section": "",
    "text": "#아우디 자동차의 도시연비 평균\nmpg.query('manufacturer == \"audi\"')[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n#도요타 자동차의 도시연비 평균\nmpg.query('manufacturer == \"toyota\"')[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n도요타 자동차 연비 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/h2.html#q3",
    "href": "posts/hw2/h2.html#q3",
    "title": "LS Bigdata School Homework 2",
    "section": "",
    "text": "#쉐보레, 포드, 혼다 자동차들의 고속도로 연비 평균\nmpg.query('manufacturer in [\"chevrolet\",\"fold\",\"honda\"]')[\"hwy\"].mean()\n\nnp.float64(25.321428571428573)"
  }
]